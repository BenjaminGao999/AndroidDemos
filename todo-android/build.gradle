apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "demo.com.postdetailapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        // data binding
        dataBinding {
            enabled = true
        }

        // 避免ndk编译错误
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }


    }

    // 避免ndk编译错误
    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/layouts_some',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }

    //打开java函数式
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    // 指定v4包版本， 避免databinding 和v7包的冲突。
    implementation "com.android.support:support-v4:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraint_layout}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // dependency
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:design:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:support-v4:${rootProject.supportLibraryVersion}"

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit2}"

    // glide
    implementation "com.github.bumptech.glide:glide:${rootProject.ext.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glideCompiler}"

    // eventbus
    implementation "org.greenrobot:eventbus:${rootProject.ext.eventbus}"

    //  rxandroid
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroid}"

    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.

    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)

    //rxjava2
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjava2}"

    // butterknife
    implementation "com.jakewharton:butterknife:${rootProject.ext.butterKnife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnife_compiler}"

    // ARouter
    implementation "com.alibaba:arouter-api:${rootProject.ext.arouter_api}"
    annotationProcessor "com.alibaba:arouter-compiler:${rootProject.ext.arouter_compiler}"

    //地区选择器
    implementation "com.contrarywind:Android-PickerView:${rootProject.ext.Android_PickerView}"

    // gson
    implementation "com.google.code.gson:gson:${rootProject.ext.gson}"

    //QR库
    implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.2.2'

    // zxing

    //    implementation "com.google.zxing:core:${rootProject.zxingCoreVersion}"

    // permission 权限请求
    implementation 'pub.devrel:easypermissions:1.0.1'

    // photo-picker
    implementation 'cn.bingoogolapple:bga-photopicker:1.2.8@aar'
    implementation 'cn.bingoogolapple:bga-baseadapter:1.2.7@aar'

    // -------------------- 以上4个库是必须依赖的 ----------------------------

    // 目前支持常见的 4 种图片加载库，必须在下面四个图片加载库中选择一个添加依赖

    //    implementation 'com.github.bumptech.glide:glide:4.5.0'

    // 九宫格展示图片
    compile 'com.jaeger.ninegridimageview:library:1.1.1'

    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    compile 'com.umeng.sdk:common:1.5.3'
//PushSDK必须依赖utdid库，所以需要加入对应依赖
    compile 'com.umeng.sdk:utdid:1.1.5.3'
//PushSDK
    compile 'com.umeng.sdk:push:4.2.0'


}
